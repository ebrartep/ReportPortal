{"remainingRequest":"C:\\vue\\supplier-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\vue\\supplier-portal\\src\\views\\ResetPassword.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\vue\\supplier-portal\\src\\views\\ResetPassword.vue","mtime":1618300135243},{"path":"C:\\vue\\supplier-portal\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vue\\supplier-portal\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\vue\\supplier-portal\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\vue\\supplier-portal\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vue\\supplier-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vue\\supplier-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICdAY29yZS9zY3NzL3Z1ZS9wYWdlcy9wYWdlLWF1dGguc2Nzcyc7DQo="},{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoPA","file":"ResetPassword.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"auth-wrapper auth-v2\">\r\n    <b-row class=\"auth-inner m-0\">\r\n\r\n      <!-- Brand logo-->\r\n      <b-link class=\"brand-logo\">\r\n        <img src=\"http://www.alisangroup.com/css/images/logo-normal.png\">\r\n\r\n      </b-link>\r\n      <!-- /Brand logo-->\r\n\r\n      <!-- Left Text-->\r\n      <b-col\r\n        lg=\"8\"\r\n        class=\"d-none d-lg-flex align-items-center p-5\"\r\n      >\r\n        <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n          <b-img\r\n            :src=\"imgUrl\"\r\n            fluid\r\n            alt=\"Register V2\"\r\n          />\r\n        </div>\r\n      </b-col>\r\n      <!-- /Left Text-->\r\n\r\n      <!-- Reset password-->\r\n      <b-col\r\n        lg=\"4\"\r\n        class=\"d-flex align-items-center auth-bg px-2 p-lg-5\"\r\n      >\r\n        <b-col\r\n          sm=\"8\"\r\n          md=\"6\"\r\n          lg=\"12\"\r\n          class=\"px-xl-2 mx-auto\"\r\n        >\r\n          <b-card-title\r\n            title-tag=\"h2\"\r\n            class=\"font-weight-bold mb-1\"\r\n          >\r\n            Şifre Yenileme 🔒\r\n          </b-card-title>\r\n          <b-card-text class=\"mb-2\">\r\n            Yeni şifreniz daha önce kullanılan şifrelerden farklı olmalıdır\r\n          </b-card-text>\r\n\r\n          <!-- form -->\r\n          <validation-observer ref=\"simpleRules\">\r\n            <b-form\r\n              class=\"auth-reset-password-form mt-2\"\r\n              method=\"POST\"\r\n              @submit.prevent=\"validationForm\"\r\n            >\r\n<b-form-group\r\n              label=\"Sicil No\"\r\n              label-for=\"sicilNo\"\r\n            >\r\n\t        <b-input-group-text class=\"form-control \">{{this.$store.state.employeeCode}}</b-input-group-text>\r\n\t </b-form-group>\r\n       \r\n              <!-- password -->\r\n              <b-form-group\r\n                label=\"Yeni Şifre\"\r\n                label-for=\"reset-password-new\"\r\n              >\r\n                <validation-provider\r\n                  #default=\"{ errors }\"\r\n                  name=\"Password\"\r\n                  vid=\"Password\"\r\n                  rules=\"required|password\"\r\n                >\r\n                  <b-input-group\r\n                    class=\"input-group-merge\"\r\n                    :class=\"errors.length > 0 ? 'is-invalid':null\"\r\n                  >\r\n                    <b-form-input\r\n                      id=\"reset-password-new\"\r\n                      v-model=\"password\"\r\n                      :type=\"password1FieldType\"\r\n                      :state=\"errors.length > 0 ? false:null\"\r\n                      class=\"form-control-merge\"\r\n                      name=\"reset-password-new\"\r\n                      placeholder=\"············\"\r\n                    />\r\n                    <b-input-group-append is-text>\r\n                      <feather-icon\r\n                        class=\"cursor-pointer\"\r\n                        :icon=\"password1ToggleIcon\"\r\n                        @click=\"togglePassword1Visibility\"\r\n                      />\r\n                    </b-input-group-append>\r\n                  </b-input-group>\r\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                </validation-provider>\r\n              </b-form-group>\r\n\r\n              <!-- confirm password -->\r\n              <b-form-group\r\n                label-for=\"reset-password-confirm\"\r\n                label=\"Yeni Şifre Tekrar\"\r\n              >\r\n                <validation-provider\r\n                  #default=\"{ errors }\"\r\n                  name=\"Confirm Password\"\r\n                  rules=\"required|confirmed:Password\"\r\n                >\r\n                  <b-input-group\r\n                    class=\"input-group-merge\"\r\n                    :class=\"errors.length > 0 ? 'is-invalid':null\"\r\n                  >\r\n                    <b-form-input\r\n                      id=\"reset-password-confirm\"\r\n                      v-model=\"cPassword\"\r\n                      :type=\"password2FieldType\"\r\n                      class=\"form-control-merge\"\r\n                      :state=\"errors.length > 0 ? false:null\"\r\n                      name=\"reset-password-confirm\"\r\n                      placeholder=\"············\"\r\n                    />\r\n                    <b-input-group-append is-text>\r\n                      <feather-icon\r\n                        class=\"cursor-pointer\"\r\n                        :icon=\"password2ToggleIcon\"\r\n                        @click=\"togglePassword2Visibility\"\r\n                      />\r\n                    </b-input-group-append>\r\n                  </b-input-group>\r\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                </validation-provider>\r\n              </b-form-group>\r\n\r\n              <!-- submit button -->\r\n              <b-button\r\n                block\r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n              >\r\n                Kaydet\r\n              </b-button>\r\n            </b-form>\r\n          </validation-observer>\r\n\r\n          <p class=\"text-center mt-2\">\r\n            <b-link :to=\"{name:'auth-login-v2'}\">\r\n              <feather-icon icon=\"ChevronLeftIcon\" /> Geri Dön\r\n            </b-link>\r\n          </p>\r\n        </b-col>\r\n      </b-col>\r\n      <!-- /Reset password-->\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable global-require */\r\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\r\nimport VuexyLogo from '@core/layouts/components/Logo.vue'\r\nimport {\r\n  BRow, BCol, BCardTitle, BCardText, BForm, BFormGroup, BInputGroup, BInputGroupAppend, BLink, BFormInput, BButton, BImg,\r\n} from 'bootstrap-vue'\r\nimport { required } from '@validations'\r\nimport store from '@/store/index'\r\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\r\n\r\nexport default {\r\n  components: {\r\n    VuexyLogo,\r\n    BRow,\r\n    BCol,\r\n    BButton,\r\n    BCardTitle,\r\n    BCardText,\r\n    BForm,\r\n    BFormGroup,\r\n    BImg,\r\n    BInputGroup,\r\n    BLink,\r\n    BFormInput,\r\n    BInputGroupAppend,\r\n    ValidationProvider,\r\n    ValidationObserver,\r\n  },\r\n  data() {\r\n    return {\r\n      userEmail: '',\r\n      cPassword: '',\r\n      password: '',\r\n      sideImg: require('@/assets/images/pages/reset-password-v2.svg'),\r\n      // validation\r\n      required,\r\n\r\n      // Toggle Password\r\n      password1FieldType: 'password',\r\n      password2FieldType: 'password',\r\n    }\r\n  },\r\n  computed: {\r\n    passwordToggleIcon() {\r\n      return this.passwordFieldType === 'password' ? 'EyeIcon' : 'EyeOffIcon'\r\n    },\r\n    imgUrl() {\r\n      if (store.state.appConfig.layout.skin === 'dark') {\r\n        // eslint-disable-next-line vue/no-side-effects-in-computed-properties\r\n        this.sideImg = require('@/assets/images/pages/reset-password-v2-dark.svg')\r\n        return this.sideImg\r\n      }\r\n      return this.sideImg\r\n    },\r\n    password1ToggleIcon() {\r\n      return this.password1FieldType === 'password' ? 'EyeIcon' : 'EyeOffIcon'\r\n    },\r\n    password2ToggleIcon() {\r\n      return this.password2FieldType === 'password' ? 'EyeIcon' : 'EyeOffIcon'\r\n    },\r\n  },\r\n  methods: {\r\n    togglePassword1Visibility() {\r\n      this.password1FieldType = this.password1FieldType === 'password' ? 'text' : 'password'\r\n    },\r\n    togglePassword2Visibility() {\r\n      this.password2FieldType = this.password2FieldType === 'password' ? 'text' : 'password'\r\n    },\r\n    validationForm() {\r\n      this.$refs.simpleRules.validate().then(success => {\r\n        if (success) {\r\n          this.$toast({\r\n            component: ToastificationContent,\r\n            props: {\r\n              title: 'Form Submitted',\r\n              icon: 'EditIcon',\r\n              variant: 'success',\r\n            },\r\n          })\r\n        }\r\n      })\r\n    },\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '@core/scss/vue/pages/page-auth.scss';\r\n</style>"]}]}