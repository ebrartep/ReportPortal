{"remainingRequest":"C:\\vue\\supplier-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\vue\\supplier-portal\\src\\views\\Home2.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\vue\\supplier-portal\\src\\views\\Home2.vue","mtime":1622130494409},{"path":"C:\\vue\\supplier-portal\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vue\\supplier-portal\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\vue\\supplier-portal\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\vue\\supplier-portal\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vue\\supplier-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vue\\supplier-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgIkBjb3JlL3Njc3MvdnVlL2xpYnMvdnVlLXNlbGVjdC5zY3NzIjsNCg=="},{"version":3,"sources":["Home2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqQA","file":"Home2.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"overflow-auto\">\r\n\r\n    <b-col lg=\"3\" class=\"my-1\" style=\"float: right\">\r\n      <b-form-group\r\n        label-for=\"filter-input\"\r\n        label-align-sm=\"right\"\r\n        label-size=\"sm\"\r\n      >\r\n        <b-input-group size=\"sm\">\r\n          <b-form-input\r\n            style=\"color: black !important\"\r\n            id=\"filter-input\"\r\n            v-model=\"filter\"\r\n            type=\"search\"\r\n            placeholder=\"Arama yapınız...\"\r\n          ></b-form-input>\r\n\r\n          <b-input-group-append>\r\n            <b-button\r\n              style=\"background-color: #6a60e7 !important\"\r\n              :disabled=\"!filter\"\r\n              @click=\"filter = ''\"\r\n              >Temizle</b-button\r\n            >\r\n          </b-input-group-append>\r\n        </b-input-group>\r\n      </b-form-group>\r\n    </b-col>\r\n\r\n     <select v-model=\"selected\" @change=\"onChange($event)\"  variant=\"gradient-primary\"  label=\"Arama yapınız...\">\r\n      <option  value=\"\">Seçiniz</option>\r\n\r\n      <option\r\n        v-for=\"(item, index) in filterItems\"\r\n        :key=\"index\"\r\n        :value=\"item.id\"\r\n      >\r\n        {{ item.companyName }}\r\n      </option>\r\n    </select>\r\n    <span>Seçilen: {{ selected }}</span>\r\n\r\n    <b-table\r\n      id=\"my-table\"\r\n      :items=\"items\"\r\n      :filter=\"filter\"\r\n      :fields=\"fields\"\r\n      :filter-included-fields=\"filterOn\"\r\n      :per-page=\"perPage\"\r\n      :current-page=\"currentPage\"\r\n      striped\r\n      responsive\r\n    >\r\n      <template #cell(show_details)=\"row\">\r\n        <b-form-checkbox\r\n          v-model=\"row.detailsShowing\"\r\n          plain\r\n          class=\"vs-checkbox-con\"\r\n          @change=\"row.toggleDetails\"\r\n        >\r\n          <span class=\"vs-checkbox\">\r\n            <span class=\"vs-checkbox--check\">\r\n              <i class=\"vs-icon feather icon-check\" />\r\n            </span>\r\n          </span>\r\n          <span class=\"vs-label\">{{\r\n            row.detailsShowing ? \"Hide\" : \"Show\"\r\n          }}</span>\r\n        </b-form-checkbox>\r\n      </template>\r\n\r\n      <template #row-details=\"row\">\r\n        <b-card>\r\n          <b-row class=\"mb-2\">\r\n            <b-col md=\"4\" class=\"mb-1\">\r\n              <strong>Name : </strong>{{ row.item.name }}\r\n            </b-col>\r\n\r\n            <b-col md=\"4\" class=\"mb-1\">\r\n              <strong>Company Name : </strong>{{ row.item.companyName }}\r\n            </b-col>\r\n            <b-col md=\"4\" class=\"mb-1\">\r\n              <strong>City : </strong>{{ row.item.city }}\r\n            </b-col>\r\n          </b-row>\r\n\r\n          <b-button\r\n            size=\"sm\"\r\n            variant=\"outline-secondary\"\r\n            @click=\"row.toggleDetails\"\r\n          >\r\n            Hide Details\r\n          </b-button>\r\n        </b-card>\r\n      </template>\r\n\r\n      <template #cell(avatar)=\"data\">\r\n        <b-avatar :src=\"data.value\" />\r\n      </template>\r\n\r\n      <template #cell(status)=\"data\">\r\n        <b-badge :variant=\"status[1][data.value]\">\r\n          {{ status[0][data.value] }}\r\n        </b-badge>\r\n      </template>\r\n    </b-table>\r\n\r\n    <b-pagination\r\n      v-model=\"currentPage\"\r\n      :total-rows=\"rows\"\r\n      size=\"ml\"\r\n      style=\"float: right\"\r\n    ></b-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  BTable,\r\n  BFormCheckbox,\r\n  BButton,\r\n  BCard,\r\n  BRow,\r\n  BCol,\r\n  BAvatar,\r\n  BBadge,\r\n  BPagination,\r\n  BFormGroup,\r\n  BFormInput,\r\n  BInputGroupAppend,\r\n  BInputGroup,\r\n} from \"bootstrap-vue\";\r\nimport vSelect from \"vue-select\";\r\n\r\nexport default {\r\n  components: {\r\n    \"b-form-group\": BFormGroup,\r\n    \"b-input-group\": BInputGroup,\r\n    \"b-form-input\": BFormInput,\r\n    \"b-input-group-append\": BInputGroupAppend,\r\n\r\n    vSelect,\r\n    BTable,\r\n    BButton,\r\n    BFormCheckbox,\r\n    BCard,\r\n    BRow,\r\n    BCol,\r\n    BBadge,\r\n    BAvatar,\r\n    BPagination,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      url: \"https://6053138445e4b30017290bdc.mockapi.io\",\r\n      rows: 100,\r\n      perPage: 10,\r\n      currentPage: 1,\r\n      filter: null,\r\n      filterOn: [],\r\n      filterByFormatted: true,\r\n      fields: [\"show_details\", \"id\", \"name\", \"companyName\", \"city\"],\r\n      items: [],\r\n      filterItems: [],\r\n      status: [\r\n        {\r\n          1: \"Current\",\r\n          2: \"Professional\",\r\n          3: \"Rejected\",\r\n          4: \"Resigned\",\r\n          5: \"Applied\",\r\n        },\r\n        {\r\n          1: \"light-primary\",\r\n          2: \"light-success\",\r\n          3: \"light-danger\",\r\n          4: \"light-warning\",\r\n          5: \"light-info\",\r\n        },\r\n      ],\r\n      selected: undefined,\r\n      dropDown: [],\r\n    };\r\n  },\r\n  created() {\r\n    let self = this;\r\n    this.$axios\r\n      .get(self.url + \"/UserApp/users\")\r\n      .then((res) => {\r\n        self.items = res.data;\r\n        self.names = res.data;\r\n        self.filterItems = res.data;\r\n      });\r\n  },\r\n  computed: {\r\n    rows() {\r\n      return this.items.length;\r\n    },\r\n    filteredItems() {\r\n      return this.items.filter((item) => {\r\n        let keep = true;\r\n\r\n        // This is a basic equality filter. What I did in the actual code was to have an object with filter functions for each key. If a key was missing, it defaulted to straight equality.\r\n        this.fieldKeys.forEach((key) => {\r\n          keep =\r\n            keep &&\r\n            (this.selectVal[key] === undefined ||\r\n              item[key] === this.selectVal[key]);\r\n        });\r\n\r\n        return keep;\r\n      });\r\n    },\r\n\r\n    fieldKeys() {\r\n      return Object.keys(this.items[0]);\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    details(item) {\r\n      alert(JSON.stringify(item));\r\n    },\r\n    onChange(event) {\r\n      console.log(event.target.value);\r\n      if (event.target.value === \"\") {\r\n        let self = this;\r\n        this.$axios\r\n          .get(\"https://6053138445e4b30017290bdc.mockapi.io/UserApp/users\")\r\n          .then((res) => {\r\n            self.items = res.data;\r\n            self.filterItems = res.data;\r\n          });\r\n      } else {\r\n        let self = this;\r\n        let url = \"https://6053138445e4b30017290bdc.mockapi.io/UserApp/users/\";\r\n        this.$axios\r\n          .get(url + event.target.value)\r\n          .then(function (response) {\r\n            self.items = [];\r\n            self.items.push(response.data);\r\n\r\n            console.log(self.items);\r\n\r\n            console.log(response);\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n@import \"@core/scss/vue/libs/vue-select.scss\";\r\n</style>"]}]}